name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      CLUSTER_ZONE: ${{ secrets.CLUSTER_ZONE }}
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      ARTIFACT_REPO: ${{ secrets.ARTIFACT_REPO }}
      REGION: ${{ secrets.REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        install_components: kubectl

    - name: Configure Docker
      run: |
        gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

    - name: Build and push Docker image for frontend
      run: |
        cd frontend
        docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/frontend:latest .
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/frontend:latest
        cd ..

    - name: Build and push Docker images for services
      run: |
        for service in product-service order-service user-service; do
          cd services/$service
          docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/$service:latest .
          docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/$service:latest
          cd ../..
        done

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.CLUSTER_NAME }} --zone ${{ secrets.CLUSTER_ZONE }} --project ${{ secrets.PROJECT_ID }}

    - name: Deploy to GKE using Helm
      run: |
        for service in frontend product-service order-service user-service; do
          helm upgrade --install $service ./charts/$service --set image.repository=${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.ARTIFACT_REPO }}/$service --set image.tag=latest --namespace default
        done

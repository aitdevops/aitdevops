name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      CLUSTER_ZONE: ${{ secrets.CLUSTER_ZONE }}
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      REGION: ${{ secrets.REGION }}
      ARTIFACT_REPO: ${{ secrets.ARTIFACT_REPO }}
      IMAGE_TAG: latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
        export_default_credentials: true

    - name: Configure Docker for GCP Artifact Registry
      run: gcloud auth configure-docker

    - name: Build and push frontend Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/frontend:${{ env.IMAGE_TAG }} -f frontend/Dockerfile ./frontend
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/frontend:${{ env.IMAGE_TAG }}

    - name: Build and push product-service Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/product-service:${{ env.IMAGE_TAG }} -f services/product-service/Dockerfile ./services/product-service
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/product-service:${{ env.IMAGE_TAG }}

    - name: Build and push order-service Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/order-service:${{ env.IMAGE_TAG }} -f services/order-service/Dockerfile ./services/order-service
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/order-service:${{ env.IMAGE_TAG }}

    - name: Build and push user-service Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/user-service:${{ env.IMAGE_TAG }} -f services/user-service/Dockerfile ./services/user-service
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/user-service:${{ env.IMAGE_TAG }}

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $CLUSTER_ZONE --project $PROJECT_ID

    - name: Deploy to GKE using Helm
      run: |
        helm upgrade --install frontend ./helm/frontend --set image.repository=${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/frontend,image.tag=${{ env.IMAGE_TAG }}
        helm upgrade --install product-service ./helm/product-service --set image.repository=${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/product-service,image.tag=${{ env.IMAGE_TAG }}
        helm upgrade --install order-service ./helm/order-service --set image.repository=${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/order-service,image.tag=${{ env.IMAGE_TAG }}
        helm upgrade --install user-service ./helm/user-service --set image.repository=${{ env.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/user-service,image.tag=${{ env.IMAGE_TAG }}
